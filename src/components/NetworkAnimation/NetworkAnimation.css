/* NetworkAnimation.css */
.network-animation-container {
  width: 100%;
  max-width: 500px; /* Max width of the animation */
  height: 300px;    /* Fixed height */
  position: relative;
  margin: 20px auto; /* Center it and add some margin */
  border: 1px solid #ddd; /* Optional: border for the container */
  overflow: hidden; /* Hide packets that go outside */
  background-color: #2c3e50; /* Dark background for contrast */
}

.node {
  width: 20px;
  height: 20px;
  background-color: #3498db; /* Blue nodes */
  border-radius: 50%;
  position: absolute;
  box-shadow: 0 0 5px #3498db, 0 0 10px #3498db;
}

/* Positioning of nodes - adjust as needed for your desired network layout */
.node-1 { top: 50%; left: 10%; transform: translateY(-50%); }
.node-2 { top: 20%; left: 40%; }
.node-3 { top: 80%; left: 40%; transform: translateY(-100%); }
.node-4 { top: 20%; left: 70%; }
.node-5 { top: 50%; left: 90%; transform: translateY(-50%); }

.line {
  background-color: #bdc3c7; /* Light grey lines */
  position: absolute;
  height: 2px;
  transform-origin: left center;
  z-index: -1; /* Behind nodes */
}

/* Manually define lines based on node positions - this is the hardest part to make dynamic without JS */
/* Line from Node 1 to Node 2 */
.line-1-2 {
  top: calc(50% - 1px); /* Adjust based on node-1 top and line height */
  left: 10%; /* Node 1 left */
  width: 30%; /* Horizontal distance between node 1 and 2 */
  transform: rotate(-45deg) translateY(-35px) translateX(15px); /* Approximate angle and positioning */
}

/* Line from Node 1 to Node 3 */
.line-1-3 {
  top: calc(50% - 1px);
  left: 10%;
  width: 30%;
  transform: rotate(45deg) translateY(35px) translateX(15px);
}

/* Line from Node 2 to Node 4 */
.line-2-4 {
  top: calc(20% + 10px - 1px); /* Node 2 top + half node height - half line height */
  left: calc(40% + 10px);    /* Node 2 left + half node width */
  width: 30%; /* Horizontal distance */
  /* No rotation needed for a horizontal line */
}

/* Line from Node 3 to Node 5 */
.line-3-5 {
  top: calc(80% - 10px - 1px); /* Node 3 top - half node height - half line height */
  left: calc(40% + 10px);    /* Node 3 left + half node width */
  width: 50%;
  transform: rotate(-36.87deg) translateY(-30px) translateX(0px); /* Angle for 3-5, needs calc */
}

/* Line from Node 4 to Node 5 */
.line-4-5 {
  top: calc(20% + 10px - 1px);
  left: calc(70% + 10px);
  width: 20%;
  transform: rotate(90deg) translateY(-10px) translateX(10px); /* This will be vertical */
}


.packet {
  width: 8px;
  height: 8px;
  background-color: #f1c40f; /* Yellow packets */
  border-radius: 50%;
  position: absolute;
  opacity: 0; /* Start invisible */
  box-shadow: 0 0 3px #f1c40f, 0 0 6px #f1c40f;
  /* Animation will be defined to move along paths */
}

/* Example packet animation - from node 1 to node 2 */
.packet-1 {
  animation: travel-1-2 4s linear infinite;
}

@keyframes travel-1-2 {
  0% {
    top: 50%; left: 10%; opacity: 1;
    transform: translate(-50%, -50%);
  }
  90% {
    top: 20%; left: 40%; opacity: 1;
    transform: translate(-50%, -50%);
  }
  100% {
    top: 20%; left: 40%; opacity: 0; /* Disappear at destination */
    transform: translate(-50%, -50%);
  }
}

/* Example packet animation - from node 3 to node 5, with delay */
.packet-2 {
  animation: travel-3-5 5s linear infinite 1s; /* 1s delay */
}

@keyframes travel-3-5 {
  0% {
    top: 80%; left: 40%; opacity: 1;
    transform: translate(-50%, -100%); /* Adjust based on node-3 transform */
  }
  90% {
    top: 50%; left: 90%; opacity: 1;
    transform: translate(-50%, -50%);
  }
  100% {
    top: 50%; left: 90%; opacity: 0;
    transform: translate(-50%, -50%);
  }
}

/* Responsive adjustments - basic example */
@media (max-width: 600px) {
  .network-animation-container {
    height: 250px;
  }
  .node { width: 15px; height: 15px; }
  /* Line and packet positions would ideally be recalculated for smaller screens,
     but that's complex with pure CSS. SVG or Canvas would be better for true responsiveness. */
}
